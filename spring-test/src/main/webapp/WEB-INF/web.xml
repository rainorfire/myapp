<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<!-- for use sockjs,web-app version should be 3.0 -->
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
    	http://java.sun.com/xml/ns/javaee 
    	http://java.sun.com/xml/ns/javaee/web-app_3_1.xsd">
  <display-name>Archetype Created Web Application</display-name>
  	
  	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters 
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	-->
	
	<!-- ****************************************** 单点登录 开始 ****************************************** -->
	
	<!-- 用于单点退出，该过滤器用于实现单点登出功能，可选配置     -->
    <!-- <listener>    
        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>    
    </listener>   -->  
    
    
    <!-- 该过滤器用于实现单点登出功能，可选配置。    
    <filter>    
        <filter-name>CAS Single Sign Out Filter</filter-name>    
        <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>    
        <init-param>    
            <param-name>casServerUrlPrefix</param-name>    
            <param-value>https://test.crm.daojia.com:8443/cas</param-value>    
        </init-param>    
        <init-param>    
            <param-name>serverName</param-name>    
            <param-value>http://localhost:8090/admin/test</param-value>
        </init-param>    
    </filter>    
    <filter-mapping>    
        <filter-name>CAS Single Sign Out Filter</filter-name>    
        <url-pattern>/*</url-pattern>    
    </filter-mapping>
     -->  
    
    <!-- 该过滤器负责用户的认证工作，必须启用它 -->    
    <!-- <filter>    
        <filter-name>CASFilter</filter-name>    
        <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>    
        <init-param>    
            <param-name>casServerLoginUrl</param-name>    
            这里的server是服务端的IP 
            <param-value>https://test.crm.daojia.com:8443/cas/login</param-value>    
        </init-param>    
        <init-param>    
            <param-name>serverName</param-name>    
            <param-value>http://localhost:8090/admin/test</param-value>
        </init-param>    
    </filter>    
    <filter-mapping>    
        <filter-name>CASFilter</filter-name>    
        <url-pattern>/*</url-pattern>    
    </filter-mapping>    
    
    该过滤器负责对Ticket的校验工作，必须启用它    
    <filter>    
        <filter-name>CAS Validation Filter</filter-name>    
        <filter-class>    
            org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter
        </filter-class>    
        <init-param>    
            <param-name>casServerUrlPrefix</param-name>    
            <param-value>https://test.crm.daojia.com:8443/cas</param-value>    
        </init-param>    
        <init-param>    
            <param-name>serverName</param-name>    
            <param-value>http://localhost:8090/admin/test</param-value>
        </init-param>    
    </filter>    
    <filter-mapping>    
        <filter-name>CAS Validation Filter</filter-name>    
        <url-pattern>/*</url-pattern>    
    </filter-mapping>    
    
    该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。 比如AssertionHolder.getAssertion().getPrincipal().getName()。    
    <filter>    
        <filter-name>CAS Assertion Thread Local Filter</filter-name>    
        <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>    
    </filter>    
    <filter-mapping>    
        <filter-name>CAS Assertion Thread Local Filter</filter-name>    
        <url-pattern>/*</url-pattern>    
    </filter-mapping>    --> 
	<!-- ****************************************** 单点登录 结束 ****************************************** -->
	
	<!-- 配置SpringMVC servlet -->
	<servlet>  
	    <servlet-name>springMVC</servlet-name>  
	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
	    <init-param>  
	        <param-name>contextConfigLocation</param-name>  
	        <param-value>classpath:applicationContext.xml</param-value> 
	    </init-param>  
	    <load-on-startup>1</load-on-startup>  
	    <async-supported>true</async-supported>
	</servlet>  
	<servlet-mapping>  
	    <servlet-name>springMVC</servlet-name>  
	    <url-pattern>/</url-pattern>  
	</servlet-mapping> 
	
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>

